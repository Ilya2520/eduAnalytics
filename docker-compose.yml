services:
  php:
    build: 
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: app_php
    volumes:
      - .:/var/www
      - reports_storage:/var/www/reports
    depends_on:
      - db
      - rabbitmq
      - elasticsearch
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: app_nginx
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - reports_storage:/var/www/reports
    depends_on:
      - php
    networks:
      - app_network

  db:
    image: postgres:15
    container_name: app_postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: app_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    networks:
      - app_network
      - shared_backend_network

  redis:
    image: redis:latest
    container_name: app_redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data # Персистентное хранилище
    command: redis-server --appendonly yes # Включаем персистентность
    networks:
      - app_network

  elasticsearch:
    image: bitnami/elasticsearch:7.10.2
    container_name: app_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS}
    ports:
      - "9200:9200"
    volumes:
    - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - app_network

  kibana:
    image: bitnami/kibana:7.10.2
    container_name: app_kibana
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST}
    ports:
      - "${KIBANA_PORT}:5601"
    depends_on:
      - elasticsearch
    networks:
      - app_network
    
  logstash:
    image: bitnami/logstash:7.16.2
    container_name: app_logstash
    volumes:
      - ./docker/logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST}
    depends_on:
      - elasticsearch
    networks:
      - app_network

  # metricbeat:
  #   image: metricbeat:7.10.2
  #   container_name: app_metricbeat
  #   user: root
  #   volumes:
  #     - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST}
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - app_network

networks:
  app_network:
    driver: bridge
  shared_backend_network:
    external: true

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  reports_storage:
    external: true
